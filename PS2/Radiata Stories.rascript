// Radiata Stories
// #ID = 2658

//Constants

characterID = {
	
	"Jack": 1,
	"Ganz": 2,
	"Ridley": 3,
	"Rynka": 4,
	"Flau": 5,
	"Star": 6,
	"Sebastian": 7,
	"Genius": 8,
	"Rocky": 9,
	"Gawain": 0xa,
	"Elwen": 0xc,
	"Gerald": 0xd,
	"Caesar": 0xe,
	"Alicia": 0xf,
	"Dennis": 0x10,
	"Gareth": 0x11,
	"Gregory": 0x12,
	"Walter": 0x13,
	"Jarvis": 0x14,
	"Aldo": 0x16,
	"Gordon": 0x17,
	"Bruce": 0x18,
	"David": 0x19,
	"Conrad": 0x1a,
	"Rolec": 0x1b,
	"Daniel": 0x1c,
	"Carlos": 0x1d,
	"Gene": 0x1e,
	"Thanos": 0x20,
	"Curtis": 0x21,
	"Cecil": 0x22,
	"Morgan": 0x23,
	"Felix": 0x24,
	"Jill": 0x25,
	"Ursula": 0x26,
	"Derek": 0x27,
	"Christoph": 0x28,
	"Claudia": 0x29,
	"Ardoph": 0x2a,
	"Dimitri": 0x2b,
	"Aidan": 0x2c,
	"Cornelia": 0x2d,
	"Faraus": 0x2e,
	"Marietta": 0x2f,
	"Ernest": 0x30,
	"Franklin": 0x31,
	"Johan": 0x32,
	"Kain": 0x35,
	"Fernando": 0x36,
	"Anastasia": 0x37,
	"Dwight": 0x38,
	"Godwin": 0x39,
	"Achilles": 0x3a,
	"Flora": 0x3b,
	"Elena": 0x3c,
	"Alvin": 0x3d,
	"Vitas": 0x3e,
	"Cosmo": 0x3f,
	"Grant": 0x40,
	"Adina": 0x41,
	"Miranda": 0x42,
	"Edgar": 0x43,
	"Clive": 0x44,
	"Lulu": 0x45,
	"Euene": 0x46,
	"Nyx": 0x47,
	"Ortoroz": 0x48,
	"Sonata": 0x49,
	"Iris": 0x4a,
	"Nocturne": 0x4b,
	"Herz": 0x4c,
	"Alba": 0x4d,
	"Lily": 0x4e,
	"Jared": 0x4f,
	"Pinky": 0x50,
	"Interlude": 0x51,
	"Solo": 0x52,
	"Joaquel": 0x53,
	"Eon": 0x54,
	"Elmo": 0x55,
	"Natalie": 0x5d,
	"Nina": 0x5e,
	"Charlie": 0x5f,
	"Leonard": 0x60,
	"Paul": 0x67,
	"Giske": 0x6e,
	"Lyle": 0x76,
	"Morfinn": 0x7a,
	"Bligh": 0x7b,
	"Dan": 0x80,
	"Elef": 0x89,
	"Ryan": 0x8a,
	"Hip": 0x8b,
	"Nick": 0x8c,
	"Golye": 0x8f,
	"Butch": 0x90,
	"Sarval": 0x91,
	"Sunset": 0x92,
	"Keaton": 0x94,
	"Tarkin": 0x95,
	"Gonber": 0x96,
	"Leban": 0x97,
	"Mook": 0x98,
	"Wal": 0x99,
	"Wyze": 0x9a,
	"Zeranium": 0x9b,
	"Oleg": 0xa7,
	"Grigory": 0xa8,
	"Dyvad": 0xaa,
	"Naom": 0xad,
	"Gil": 0xb3,
	"Shin": 0xb4,
	"Fan": 0xb5,
	"Row": 0xb6,
	"Pitt": 0xb7,
	"Few": 0xb8,
	"Alan": 0xb9,
	"Keane": 0xba,
	"Clarence": 0xbc,
	"Serva": 0xbd,
	"Hyann": 0xbe,
	"Chatt": 0xbf,
	"Zida": 0xc0,
	"Franz": 0xc1,
	"Romaria": 0xc2,
	"Marsha": 0xc3,
	"Lufa": 0xc4,
	"Coco": 0xc5,
	"Martinez": 0xc6,
	"Santos": 0xc7,
	"Rika": 0xc8,
	"Mikey": 0xc9,
	"Gob": 0xca,
	"Lin": 0xcb,
	"Brie": 0xcc,
	"Gonn": 0xcd,
	"Golly": 0xce,
	"Gobrey": 0xcf,
	"Den": 0xd0,
	"Ben": 0xd1,
	"Aesop": 0xd2,
	"Monki": 0xd3,
	"Gabe": 0xd4,
	"Mason": 0xd5,
	"Goo": 0xd6,
	"Donkey": 0xd7,
	"Ricky": 0xd8,
	"Drew": 0xd9,
	"Gruel": 0xda,
	"Doppio": 0xdb,
	"Pietro": 0xdc,
	"Jan": 0xdd,
	"Marco": 0xde,
	"Niko": 0xdf,
	"Danny": 0xe0,
	"Dominic": 0xe1,
	"Bosso": 0xe2,
	"Georgio": 0xe3,
	"Luka": 0xe4,
	"Sonny": 0xe5,
	"Giovanni": 0xe6,
	"Polpo": 0xe7,
	"JJ": 0xe8,
	"Leona": 0xe9,
	"Valkyrie": 0xee,
	"Galvados": 0xf7,
	"Adele": 0x118,
	"Howard": 0x119,
	"Astor": 0x11b,
	"Synelia": 0x11d,
	"Tony": 0x11e,
	"Patrick": 0x11f,
	"Putt": 0x120,
	"Bran": 0x125,
	"Stefan": 0x126,
	"Yack": 0x129,
	"Garcia": 0x12c,
	"Dynas": 0x12d
}

friendIDs = [1,2,3,4,5,6,7,8,9,0xa,0xc,0xd,0xe,0xf,0x10,0x11,0x12,0x13,0x14,0x16,0x17,0x18,0x19,0x1a,0x1b,0x1c,0x1d,0x1e,0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f,0x30,0x31,0x32,0x35,0x36,0x37,0x38,0x39,0x3a,0x3b,0x3c,0x3d,0x3e,0x3f,0x40,0x41,0x42,0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4a,0x4b,0x4c,0x4d,0x4e,0x4f,0x50,0x51,0x52,0x53,0x54,0x55,0x5d,0x5e,0x5f,0x60,0x67,0x6e,0x76,0x7a,0x7b,0x80,0x89,0x8a,0x8b,0x8c,0x8f,0x90,0x91,0x92,0x94,0x95,0x96,0x97,0x98,0x99,0x9a,0x9b,0xa8,0xaa,0xad,0xb3,0xb4,0xb5,0xb6,0xb7,0xb8,0xb9,0xba,0xbc,0xbd,0xbe,0xbf,0xc0,0xc1,0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8,0xc9,0xca,0xcb,0xcc,0xcd,0xce,0xcf,0xd0,0xd1,0xd2,0xd3,0xd4,0xd5,0xd6,0xd7,0xd8,0xd9,0xda,0xdb,0xdc,0xdd,0xde,0xdf,0xe0,0xe1,0xe2,0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,0xee,0xf7,0x118,0x119,0x11b,0x11d,0x11e,0x11f,0x120,0x125,0x126,0x129,0x12c,0x12d]

//Common Functions

function music() => dword(0x18d580)

function mainPtr() => dword(0x18e8d0)
function validPtr() => mainPtr() != 0
function notLoading() => validPtr() && byte(0x37f9c6) + byte(0x37f9c7) + byte(0x37f9fc) != 0

function battleStatus() => byte(0x37fb6d)
function firstEnemy() => dword(0x37fb94)

function inBattle() => bit4(mainPtr() - 0xfd5) == 1

function interactionID() => dword(mainPtr() + 0x11d44)
function interactionPtr() => dword(mainPtr() + 0x11d48)
function dialoguePtr() => dword(mainPtr() + 0x11d4c)
function specificDialogue(offset) => dialoguePtr() - interactionPtr() == offset

function characterPtr() => dword(dword(mainPtr() + 0x1b294) + 0x20)
function room() => word(characterPtr() + 0x3f4)
function dagols() => dword(characterPtr() + 0x3d8)
function characterRoom(characterID) => word(characterPtr() + 0x370*characterID + 0x84)
function commonItemSlot(index) => word(characterPtr() + 0x428 + 4*(index-1))
function getCommonItem(itemID) {

	tmp = always_false()
	
	for i in range(1, 100) {
	
		tmp = tmp || prev(commonItemSlot(i)) == 0 && commonItemSlot(i) == itemID
	}
	
	return tmp
}

function coordinatePtr() => dword(dword(mainPtr() + 0x1b294) + 0x700)
function animation() => word(coordinatePtr() + 0x2f0)
function dance(roomID, musicID) => validPtr() && never(room() != roomID) && never(music() != musicID) && trigger_when(repeated(60, __ornext(animation() == 0x3f || animation() == 0x40)))

//Trigger Functions

function fullfriendsList() {

	tmp = 0
	for friend in friendIDs {
	
		tmp = tmp + bit3(characterPtr() + 0x370*friend + 0x1d) + bit4(characterPtr() + 0x370*friend + 0x1d)
	}
	
	return notLoading() && prev(tmp) == 176 && measured(tmp == 177)
}

function beHonestOleg() => validPtr() && room() == 0x1f && characterRoom(characterID["Oleg"]) == 0x1f && bit1(mainPtr() - 0xfc4) == 1 && prev(bit1(characterPtr() + 0x370*characterID["Oleg"] + 0x8d)) == 0 && trigger_when(specificDialogue(0x594))
function restroomScene() => validPtr() && room() == 0x90 && bit0(mainPtr() - 0xf98) > prev(bit0(mainPtr() - 0xf98))
function giveGanzWine() => validPtr() && room() == 0x107 && bit7(mainPtr() - 0xda7) > prev(bit7(mainPtr() - 0xda7))
function findLeonard() => validPtr() && room() == 0xa3 && bit6(mainPtr() - 0xdc9) < prev(bit6(mainPtr() - 0xdc9))
function meetLeona() => validPtr() && room() == 0x3ac && bit2(mainPtr() - 0xefa) > prev(bit2(mainPtr() - 0xefa))
function goodCrocSkin() => validPtr() && never(room() != 0xfa) && never(bit6(mainPtr() - 0xdc5) == 1) && once(prev(bit5(mainPtr() - 0xdc5)) == 1) && trigger_when(bit7(mainPtr() - 0xda4) == 1)
function teleportSelf() => validPtr() && room() == 0xf9 && prev(bit7(mainPtr() - 0xda2)) == 1 && trigger_when(bit7(mainPtr() - 0xda2) == 0)
function loseJarvisFoodFight() => validPtr() && room() == 0x206 && inBattle() && firstEnemy() == characterID["Jarvis"] && trigger_when(battleStatus() == 2)
function winJarvisFoodFight() => validPtr() && room() == 0x206 && inBattle() && firstEnemy() == characterID["Jarvis"] && trigger_when(battleStatus() == 1)

function getGuardMoney() => validPtr() && room() == 0xa5 && dagols() - prev(dagols()) == 1
function reflectionScare() => validPtr() && room() == 0x1fa && bit6(mainPtr() - 0xf8d) > prev(bit6(mainPtr() - 0xf8d))
function sexyPictures() => validPtr() && room() == 0x328 && interactionID() == 0x64
function takePicture() => validPtr() && room() == 0xfe && interactionID() == 0xd1 && specificDialogue(0x24c)

function darkElfBandDance() => dance(0x10a, 0x2d)
function rachelDance() => dance(0x324, 0x86)
function donkeyDance() => dance(0x79, 0x1c)

//Achievements

//Verified
achievement(

	title = "Me and My Friends",
	description = "Add all 177 recruitable characters to your friends list",
	points = 100,
	trigger = fullfriendsList()
)

//Verified
achievement(

	title = "Honesty Goes a Long Way [m]",
	description = "Be honest to Oleg about the liquor thieves",
	points = 5,
	trigger = beHonestOleg()
)

//Missable?
//Verified
achievement(

	title = "Ladies Only? [m]",
	description = "Attempt to enter the women's restroom",
	points = 1,
	trigger = restroomScene()
)

//Verified
achievement(

	title = "Exquisite Taste [m]",
	description = "Give Ganz a bottle of Elven Wine",
	points = 5,
	trigger = giveGanzWine()
)

//Missable?
//Verified
achievement(

	title = "Rabbit Chase [m]",
	description = "Track down Leonard for Theresa",
	points = 5,
	trigger = findLeonard()
)

//Verified
achievement(

	title = "Oblivious Genius",
	description = "Help Leona find her glasses",
	points = 1,
	trigger = meetLeona()
)

//Verified
achievement(

	title = "Lifetime's Worth of Luck [m]",
	description = "Collect a Crocogator's Skin for Anastasia that is worthy of a great reward",
	points = 10,
	trigger = goodCrocSkin()
)

//Verified
achievement(

	title = "Kinesthetic Learner [m]",
	description = "Get scolded by Jarvis for teleporting to the same location",
	points = 1,
	trigger = teleportSelf()
)

//Verified
achievement(

	title = "A Drink With a Meal Is Good for You [m]",
	description = "Lose the fight against Jarvis to eat at Carl's Pub",
	points = 1,
	trigger = loseJarvisFoodFight()
)

//Verified
achievement(

	title = "Yur-In Love [m]",
	description = "Win the fight against Jarvis to eat at Begin Eatery",
	points = 5,
	trigger = winJarvisFoodFight()
)

//Missable?
//Verified
achievement(

	title = "Side Hustle [m]",
	description = "Get 1 Dagol by kicking a guard",
	points = 1,
	trigger = getGuardMoney()
)

//Verified
achievement(

	title = "Chamber of Reflection",
	description = "Look at your reflection in a cursed mirror",
	points = 1,
	trigger = reflectionScare()
)

//Verified
achievement(

	title = "Seksee Pictures",
	description = "Read an advertisement for the Rachel Fan Club",
	points = 1,
	trigger = sexyPictures()
)

//Verified
achievement(

	title = "Say Cheese",
	description = "Take a picture with a goblin photo stand-in",
	points = 1,
	trigger = takePicture()
)

//Verified
achievement(

	title = "One With Nature",
	description = "Dance for a moment at the Dark Elf Band's concert",
	points = 1,
	trigger = darkElfBandDance()
)

//Verified
achievement(

	title = "Let's Get It On",
	description = "Dance for a moment at Rachel's concert",
	points = 1,
	trigger = rachelDance()
)

//Verified
achievement(

	title = "Love♪ Dream♪ No Thanks♪",
	description = "Dance for a moment at Donkey's concert",
	points = 1,
	trigger = donkeyDance()
)